{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "signedExpiry": {
            "type": "object",
            "defaultValue": {
                "signedExpiry": "[dateTimeAdd(utcNow('u'), 'P2Y')]"
            }
        },
        "botId": {
            "type": "string",
            "defaultValue": "luis-qna-todo-bot"
        },
        "sku": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "F0",
                "S1"
            ]
        },
        "msAppId": {
            "type": "string"
        },
        "msAppPassword": {
            "type": "string"
        },
        "displayName": {
            "type": "string",
            "defaultValue": ""
        },
        "deployTime": {
            "type": "string",
            "defaultValue": "[utcNow()]"
        },
        "rolloutName": {
            "type": "string",
            "defaultValue": "[concat('rollout-', newGuid())]"
        },
        "qnaBotName": {
            "type": "string",
            "defaultValue": null
        },
        "randomKeys": {
            "type": "object",
            "defaultValue": {
                "key1": "[uniqueString(resourceGroup().id, newGuid())]",
                "key2": "[uniqueString(resourceGroup().id, newGuid())]"
            }
        },
        "botEnv": {
            "type": "string",
            "defaultValue": "prod"
        },
        "artifactsSasUrl": {
            "type": "string",
            "defaultValue": "https://botartifactswocgxn.blob.core.windows.net/artifacts?sv=2019-02-02&sp=rl&sr=c&st=2020-07-26&se=2030-07-24&sig=2ePX2wnWYt8%2B2z%2BzgUl2o5wBp5TlX8glGckLUog7Wgs%3D"
        },
        "armTemplateRoot": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/hailiu2586/botbuilder-dotnet-tools/hailiu/docker-botbuild/Templates/"
        }
    },
    "functions": [
        {
            "namespace": "ns",
            "members": {
                "keyValue": {
                    "parameters": [
                        {
                            "name": "key",
                            "type": "string"
                        },
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "output": {
                        "type": "object",
                        "value": "[json(concat('{\"', parameters('key'), '\": \"', parameters('value'), '\"}'))]"
                    }
                }
            }

        }
    ],
    "variables": {
        "location": "[resourceGroup().location]",
        "uniqueSuffix": "[toLower(substring(uniqueString(resourceGroup().id, 'va-resources'), 0, 6))]",
        "msiName": "[concat('va-rollout-id-', variables('uniqueSuffix'))]",
        "msiId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('msiName'))]",
        "botbuildContainer": "[concat('va-botbuild-', variables('uniqueSuffix'))]",
        "botbuildScriptName": "[concat('va-botbuild-script-', variables('uniqueSuffix'))]",
        "checkBuildStepName": "checkBuildSuccessful",
        "checkBuildStepId": "[resourceId('Microsoft.DeploymentManager/steps', variables('checkBuildStepName'))]",
        "botAppZipPath": "[concat('artifacts/todo-luis-qna-bot/ToDoBotWithLUISAndQnAMaker-built-', parameters('rolloutName')  ,'.zip')]",
        "keyVaultName": "[concat('bot-secrets-', variables('uniqueSuffix'))]",
        "appPasswordSecret": "[concat(parameters('botId'), '-pwd-', variables('uniqueSuffix'))]",
        "appPasswordSecretId": "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appPasswordSecret'))]",
        "botDisplayName": "[if(empty(parameters('displayName')), parameters('botId'), parameters('displayName'))]",
        "botAppName": "[toLower(concat(parameters('botId'), '-', variables('uniqueSuffix')))]",
        "botAppResId": "[resourceId('Microsoft.Web/sites', variables('botAppName'))]",
        "qnaBotName": "[coalesce(parameters('qnaBotName'), parameters('botId'))]",
        "botAppSettingsMap": {
            "scratch": {
                "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.scratch.botframework.com/",
                "BotOpenIdMetadata": "https://login.scratch.botframework.com/v1/.well-known/openidconfiguration"
            },
            "ppe": {
                "azureWebJobsBotFrameworkDirectLineEndpoint": "https://directline.ppe.botframework.com/",
                "BotOpenIdMetadata": "https://login.ppe.botframework.com/v1/.well-known/openidconfiguration"
            },
            "prod": {
            },
            "core": {
                "MicrosoftAppId": "[parameters('msAppId')]"
            }
        },
        "botAppSettings": "[union(variables('botAppSettingsMap').core, variables('botAppSettingsMap')[parameters('botEnv')])]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-topology",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'topology.json')]",
                "contentVersion":"1.0.0.0"
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-insights",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'insights.json')]",
                "contentVersion":"1.0.0.0"
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-serverFarm",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'serverfarm.json')]",
                "contentVersion":"1.0.0.0"
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-luis",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'luis.json')]",
                "contentVersion":"1.0.0.0"
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-qna",
            "dependsOn": [
                "deploy-serverFarm"
            ],
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'qna.json')]",
                "contentVersion":"1.0.0.0"
              },
              "parameters": {
                  "serverFarmId": {
                      "value": "[reference('deploy-serverFarm').outputs.serverFarmId.value]"
                  }
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-role",
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'role.json')]",
                "contentVersion":"1.0.0.0"
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-storage",
            "dependsOn": [],
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'storage.json')]",
                "contentVersion":"1.0.0.0"
              }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "deploy-botBuild",
            "dependsOn": [
                "deploy-role"
            ],
            "properties": {
              "mode": "Incremental",
              "templateLink": {
                "uri": "[concat(parameters('armTemplateRoot'), 'botBuild.json')]",
                "contentVersion":"1.0.0.0"
              },
              "parameters": {
                  "botId": {
                      "value": "[parameters('botId')]"
                  },
                  "rolloutName": {
                      "value": "[parameters('rolloutName')]"
                  },
                  "msiId": {
                      "value": "[reference('deploy-role').outputs.msiId.value]"
                  },
                  "env": {
                    "value": [
                        {
                            "name": "ARTIFACTS_SASURI",
                            "value": "[parameters('artifactsSasUrl')]"
                        },
                        {
                            "name": "BOT_ARTIFACT",
                            "value": "todo-luis-qna-bot/ToDoBotWithLUISAndQnAMaker.zip"
                        },
                        {
                            "name": "BOT_WEB_APP",
                            "value": "[variables('botAppName')]"
                        },
                        {
                            "name": "QNA_BOT_NAME",
                            "value": "[variables('qnaBotName')]"
                        }
                    ]
                  }
              }
            }
        },
        {
            "name": "[variables('checkBuildStepName')]",
            "comments": "wait for the ACI to finish the build out",
            "location": "[variables('location')]",
            "type": "Microsoft.DeploymentManager/steps",
            "apiVersion": "2019-11-01-preview",
            "dependsOn": [
                "deploy-botBuild",
                "deploy-storage"
            ],
            "properties": {
                "stepType": "healthCheck",
                "attributes": {
                    "waitDuration": "PT1M",
                    "duration": "PT10M",
                    "healthyStateDuration": "PT1M",
                    "maxElasticDuration": "PT10M",
                    "type": "REST",
                    "properties": {
                        "healthChecks": [
                            {
                                "name": "buildCheck",
                                "request": {
                                    "method": "GET",
                                    "uri": "[concat(reference('deploy-storage').outputs.storageBlobEndpoint.value, variables('botAppZipPath'), '?', reference('deploy-storage').outputs.storageSasToken.value)]",
                                    "authentication": {
                                        "type": "ApiKey",
                                        "name": "X-Noop",
                                        "in": "Header",
                                        "value": "noop"
                                    }
                                },
                                "response": {
                                    "successStatusCodes": ["200"]
                                }
                            }
                        ]
                    }
                }
            }
        },
        {
            "type": "Microsoft.DeploymentManager/rollouts",
            "comments": "execute rollout",
            "apiVersion": "2018-09-01-preview",
            "name": "[parameters('rolloutName')]",
            "location": "[variables('location')]",
            "Identity": {
                "type": "userAssigned",
                "identityIds": [
                    "[variables('msiId')]"
                ]
            },
            "dependsOn": ["deploy-topology", "deploy-role"],
            "properties": {
            "buildVersion": "1.0.0.0",
            "artifactSourceId": "[reference('deploy-topology').outputs.artifactId.value]",
            "targetServiceTopologyId": "[reference('deploy-topology').outputs.topologyId.value]",
            "stepGroups": [
                {
                    "name": "stepGroup1",
                    "preDeploymentSteps": [],
                    "deploymentTargetId": "[reference('deploy-topology').outputs.serviceUnitId.value]",
                    "postDeploymentSteps": [{
                        "stepId": "[variables('checkBuildStepId')]"
                    }]
                }
            ]}
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('keyVaultName')]",
            "location": "[variables('location')]",
            "apiVersion": "2019-09-01",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "Standard"
                },
                "accessPolicies": [],
                "enabledForTemplateDeployment": true
            },
            "resources": [
                {
                    "type": "secrets",
                    "name": "[variables('appPasswordSecret')]",
                    "condition": "[not(empty(parameters('msAppPassword')))]",
                    "apiVersion": "2019-09-01",
                    "properties": {
                        "value": "[parameters('msAppPassword')]"
                    },
                    "dependsOn": [
                        "[variables('keyVaultName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2018-11-01",
            "kind": "app",
            "name": "[variables('botAppName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "deploy-serverFarm",
                "deploy-insights",
                "[variables('appPasswordSecretId')]"
            ],
            "properties": {
                "serverFarmId": "[reference('deploy-serverFarm').outputs.serverFarmId.value]"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "resources": [
                {
                    "type": "config",
                    "name": "appsettings",
                    "location": "[variables('location')]",
                    "apiVersion": "2018-11-01",
                    "dependsOn": [
                        "[variables('botAppName')]",
                        "deploy-insights"
                    ],
                    "properties": "[union(variables('botAppSettings'), ns.keyValue('APPINSIGHTS_INSTRUMENTATIONKEY', reference('deploy-insights').outputs.instrumentationKey.value),  ns.keyValue('MicrosoftAppPassword', concat('@Microsoft.KeyVault(SecretUri=', reference(variables('appPasswordSecretId'), '2019-09-01', 'Full').properties.secretUriWithVersion, ')')))]"
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/slots",
            "name": "[concat(variables('botAppName'),'/staging')]",
            "location": "[variables('location')]",
            "apiVersion": "2018-11-01",
            "dependsOn": [
                "[variables('botAppName')]"
            ],
            "properties": {
                "serverFarmId": "[reference('deploy-serverFarm').outputs.serverFarmId.value]",
                "siteConfig": {
                    "appSettings":[]
                }
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('botAppName'), '/slotConfigNames')]",
            "dependsOn": [
                "[variables('botAppName')]"
            ],
            "apiVersion": "2018-11-01",
            "properties": {
                "appSettingNames": [
                    "MicrosoftAppId",
                    "MicrosoftAppPassword"
                ]
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults/accessPolicies",
            "name": "[concat(variables('keyVaultName'), '/add')]",
            "apiVersion": "2019-09-01",
            "dependsOn": [
                "[variables('keyVaultName')]",
                "[variables('botAppResId')]"
            ],
            "properties": {
                "accessPolicies" : [
                {
                    "tenantId": "[reference(variables('botAppResId'), '2019-08-01', 'Full').identity.tenantId]",
                    "objectId": "[reference(variables('botAppResId'), '2019-08-01', 'Full').identity.principalId]",
                    "permissions": {
                        "secrets": [ "get" ]
                    }
                }]
            }
        },
        {
            "type": "Microsoft.BotService/botServices",
            "name": "[parameters('botId')]",
            "kind": "bot",
            "apiVersion": "2018-07-12",
            "location": "global",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "dependsOn": [
                "[variables('botAppName')]"
            ],
            "properties": {
                "displayName": "[variables('botDisplayName')]",
                "endpoint": "[concat('https://', reference(variables('botAppResId'), '2018-02-01', 'Full').properties.hostNames[0], '/api/messages')]",
                "msaAppId": "[parameters('msAppId')]"
            },
            "tags": {
                "hostedBy": "[resourceId('Microsoft.Web/sites', variables('botAppName'))]"
            }
        }
    ],
    "outputs": {
        "vaRolloutId": {
            "type": "string",
            "value": "[reference('deploy-role').outputs.principalId.value]"
        },
        "storageSasToken": {
            "type": "string",
            "value": "[reference('deploy-storage').outputs.storageSasToken.value]"
        },
        "luisAccountKey": {
            "type": "string",
            "value": "[reference('deploy-luis').outputs.luisAccountKey.value]"
        },
        "luisAuthorKey": {
            "type": "string",
            "value": "[reference('deploy-luis').outputs.luisAuthorKey.value]"
        },
        "rolloutId": {
            "type": "string",
            "value": "[parameters('rolloutName')]"
        }
    }
}
